{{ 'main-product.css' | asset_url | stylesheet_tag }}
<script src="{{ 'main-product.js' | asset_url }}" defer></script>

{% liquid
  assign mobile_items = 1
  assign tablet_items = 1
  assign desktop_items = 1
%}
{% style %}
   product-page {
      padding-top: {{ section.settings.top_space | times: 0.75 | round: 0 }}px !important;
      padding-bottom: {{ section.settings.bottom_space | times: 0.75 | round: 0 }}px !important;
   }

  @media screen and (min-width: 750px) {
    product-page {
      padding-top: {{ section.settings.top_space }}px;
      padding-bottom: {{ section.settings.bottom_space }}px;
    }
  }

   .product-page-slider__slides-container {
    --mobile-items: {{ mobile_items }};
    --tablet-items: {{ tablet_items }};
    --desktop-items: {{ desktop_items }};
  }
  @media screen and (min-width: 1024px) {
     .prev,
     .next {
      width: 5%;
    }
  }
{% endstyle %}

<div class="product-hidden-images" style="display: none;">
  {% if product.images.size > 0 %}
    {% for image in product.images %}
      <div
        class="item"
        {% if image.alt contains '#color:' %}
          {% assign image_alt = image.alt | split: '#color:' %}
          data-variant-color="{{ image_alt }}"
        {% elsif image.attached_to_variant? %}
          data-attached-to-variant="{{ image.variants[0].title }}"
        {% endif %}
      >
        <div class="item-picture media">
          {%- capture sizes -%}(min-width: 1024px) calc((var(--page-width) - 10rem ) / 2), (min-width: 750px) calc(100vw - 4rem), calc(100vw - 2rem){%- endcapture -%}
          {%- assign widths = '300, 350, 400, 450, 500, 550, 600, 650, 700, 750, 800, 850, 900' -%}
          {%- assign width = '900' -%}
          {{
            image
            | image_url: width: width
            | image_tag:
              loading: 'lazy',
              class: 'contain',
              alt: image.alt,
              width: image.width,
              height: image.height,
              sizes: sizes,
              widths: widths
          }}
        </div>
      </div>
    {% endfor %}
  {% else %}
    <div class="item">
      <div class="item-picture">{{ 'product-1' | placeholder_svg_tag: 'placeholder' }}</div>
    </div>
  {% endif %}
</div>
<div class="product-hidden-thumbnails" style="display: none;">
  {% if product.images.size > 0 %}
    {% for thumbnail in product.images %}
      <div
        class="thumbnail"
        {% if thumbnail.alt contains '#color:' %}
          {% assign thumbnail_alt = thumbnail.alt | split: '#color:' %}
          data-variant-color="{{ thumbnail_alt }}"
        {% elsif thumbnail.attached_to_variant? %}
          data-attached-to-variant="{{ thumbnail.variants[0].title }}"
        {% endif %}
      >
        <div class="thumbnail-picture media">
          {%- assign image = thumbnail -%}
          {%- capture sizes -%}(min-width: 1024px) calc(((var(--page-width) - 10rem ) / 2 ) / 6), (min-width: 750px) calc((100vw - 4rem) / 5), calc((100vw - 2rem) / 4){%- endcapture -%}
          {%- assign widths = '60, 70, 80, 90, 100, 110, 120, 130' -%}
          {%- assign width = '130' -%}
          {{
            image
            | image_url: width: width
            | image_tag:
              loading: 'lazy',
              class: 'contain',
              alt: image.alt,
              width: image.width,
              height: image.height,
              sizes: sizes,
              widths: widths
          }}
        </div>
      </div>
    {% endfor %}
  {% else %}
    <div class="thumbnail">
      <div class="thumbnail-picture">
        {{ 'product-1' | placeholder_svg_tag: 'placeholder' }}
      </div>
    </div>
  {% endif %}
</div>
<div class="product-hidden-payment-methods" style="display: none;">
  <div class="product-page__payment-methods"></div>
</div>

{% assign current_variant = product.selected_or_first_available_variant %}

<product-page reveal-on-scroll class="product-page" data-product="{{ product.id }}">
  <div class="product-page__container">
    {% render 'snippet-breadcrumbs',
      bc1: routes.root_url,
      bc1_text: 'Home',
      bc2: routes.collections_url,
      bc2_text: 'Products',
      bc3: product.url,
      bc3_text: product.title
    %}
    <div class="product-page__content">
      <div class="product-page__pictures">
        <div class="product-page__close">
          {% render 'snippet-icons', icon: 'close' %}
        </div>

        <product-page-slider
          data-mobile-items="{{ mobile_items }}"
          data-tablet-items="{{ tablet_items }}"
          data-desktop-items="{{ desktop_items }}"
          class="{{ section.id }}"
        >
          <div class="product-page-slider {% if section.settings.thumbnails_on_mobile == true %}thumbnails-mobile{% endif %}">
            <div class="prev">
              {% render 'snippet-icons', icon: 'chevron-prev' %}
            </div>
            <div class="product-page-slider__slides-container  {% if section.settings.thumbnails_on_mobile == true %}thumbnails-mobile{% endif %}">
              <div class="zoom-icon">{% render 'snippet-icons', icon: 'zoom-in' %}</div>
              <div class="slide" style="transform: translateX(0px);"></div>
            </div>
            <div class="next">
              {% render 'snippet-icons', icon: 'chevron-next' %}
            </div>
          </div>
          <div
            class="product-page-slider__indicators {% if section.settings.thumbnails_on_mobile == false %}indicators-mobile{% else %}thumbnails-mobile{% endif %}"
          ></div>
          <div class="product-page-slider__thumbnails-container ">
            <div
              class="product-page-slider__thumbnails {% if section.settings.thumbnails_on_mobile == false %}indicators-mobile{% endif %}"
            ></div>
          </div>
        </product-page-slider>
        <div
          class="product-page__pictures-place-protector"
        ></div>
      </div>
      <div class="product-page__info">
        {% form 'product', product, class: 'product-page__form' %}
          {% for block in section.blocks %}
            {% case block.type %}
              {%- when '@app' -%}
                {% render block %}
              {% when 'vendor' %}
                <div class="product-page__vendor" {{ block.shopify_attributes }}>
                  <p>{{ product.vendor }}</p>
                </div>
              {% when 'name' %}
                <div class="product-page__name" {{ block.shopify_attributes }}>
                  <h3>{{ product.title }}</h3>
                </div>
              {% when 'sale_tag' %}
                <div class="product-page__prices" {{ block.shopify_attributes }}>
                  {% assign price_difference_text = 'general.others.sale_text' | t %}
                  {% assign price_difference = current_variant.compare_at_price | minus: current_variant.price %}
                  <div class="product-page__tag">
                    {% if current_variant.available %}
                      {% if price_difference > 0 %}
                        <p class="tag--animated tag-text">
                          {{ price_difference_text }}
                          {{ current_variant.compare_at_price | minus: current_variant.price | money }}
                        </p>
                      {% endif %}
                    {% endif %}
                    {% unless current_variant.available %}
                      <p class="tag--disabled tag-text">{{ 'general.others.sold_out' | t }}</p>
                    {% endunless %}
                  </div>
                </div>
              {% when 'price' %}
                <div class="product-page__prices" {{ block.shopify_attributes }}>
                  <div class="product-page__price">
                    <p class="product-page__price--actual price--actual">
                      {{ current_variant.price | money }}
                    </p>
                    <p class="product-page__price--compare-at price--compare-at">
                      {{ current_variant.compare_at_price | money }}
                    </p>
                  </div>
                </div>
              {% when 'variants_selector' %}
                {% unless product.has_only_default_variant %}
                  <div class="product-page__variants" {{ block.shopify_attributes }}>
                    {% for option in product.options_with_values %}
                      <div class="product-page__radios-container">
                        {% if option.name != 'Color' %}
                          <p class="product-page__radio__title">{{ option.name }}</p>
                          {% if block.settings.variant_selector_type == 'block' %}
                            <div class="product-page__radio__content">
                              {% for value in option.values %}
                                <label
                                  class="product-page__radio__label{% if option.selected_value == value %} checked{% endif %}"
                                  for="{{ option.name | handle }}-{{ value | handle }}"
                                >
                                  <input
                                    type="radio"
                                    name="{{ option.name }}"
                                    value="{{ value }}"
                                    id="{{ option.name | handle }}-{{ value | handle }}"
                                    class="product-page__radio__input"
                                  >
                                  {{ value }}
                                </label>
                              {% endfor %}
                            </div>
                          {% elsif block.settings.variant_selector_type == 'dropdown' %}
                            <select name="{{ option.name }}">
                              {% for value in option.values %}
                                <option
                                  value="{{ value }}"
                                  type="radio"
                                >
                                  {{ value }}
                                </option>
                              {% endfor %}
                            </select>
                          {% endif %}
                        {% elsif option.name == 'Color' %}
                          <p class="product-page__radio__title">{{ option.name }}</p>
                          {% if block.settings.color_selector_type == 'block' %}
                            <div class="product-page__radio__content">
                              {% for value in option.values %}
                                <label
                                  class="product-page__radio__label{% if option.selected_value == value %} checked{% endif %}"
                                  for="{{ option.name | handle }}-{{ value | handle }}"
                                >
                                  <input
                                    {% if option.selected_value == value %}
                                      checked
                                    {% endif %}
                                    type="radio"
                                    name="{{ option.name }}"
                                    value="{{ value }}"
                                    id="{{ option.name | handle }}-{{ value | handle }}"
                                    class="product-page__radio__input"
                                  >
                                  {{ value }}
                                </label>
                              {% endfor %}
                            </div>
                          {% elsif block.settings.color_selector_type == 'dropdown' %}
                            <div class="product-page__color-select-content">
                              <select name="{{ option.name }}">
                                {% for value in option.values %}
                                  <option
                                    value="{{ value }}"
                                    type="radio"
                                  >
                                    {{ value }}
                                  </option>
                                {% endfor %}
                              </select>
                            </div>
                          {% elsif block.settings.color_selector_type == 'variant_image' %}
                            <div class="product-page__radio__content">
                              {% for value in option.values %}
                                {% liquid
                                  for variant in product.variants
                                    if variant.title contains value
                                      assign variant_image = variant.featured_image
                                      break
                                    endif
                                  endfor
                                %}
                                <label
                                  class="product-page__radio__label media variant_image{% if option.selected_value == value %} checked{% endif %}"
                                  style=""
                                  for="{{ option.name | handle }}-{{ value | handle }}"
                                >
                                  <input
                                    {% if option.selected_value == value %}
                                      checked
                                    {% endif %}
                                    type="radio"
                                    name="{{ option.name }}"
                                    value="{{ value }}"
                                    id="{{ option.name | handle }}-{{ value | handle }}"
                                    class="product-page__radio__input"
                                  >
                                  {% if variant_image != blank %}
                                    {%- assign image = variant_image -%}
                                    {%- assign widths = '80, 90, 100' -%}
                                    {%- assign width = '100' -%}
                                    {{
                                      image
                                      | image_url: width: width
                                      | image_tag:
                                        loading: 'lazy',
                                        class: 'contain',
                                        alt: image.alt,
                                        width: image.width,
                                        height: image.height,
                                        widths: widths
                                    }}
                                  {% else %}
                                    {{ value }}
                                  {% endif %}
                                </label>
                              {% endfor %}
                            </div>
                          {% elsif block.settings.color_selector_type == 'color_swatch' %}
                            <div class="product-page__radio__content">
                              {% for value in option.values %}
                                <label
                                  class=" product-page__radio__label color_swatch{% if option.selected_value == value %} checked{% endif %}"
                                  style="color: transparent;{% render 'snippet-color-swatch', actual_color: value %}"
                                  for="{{ option.name | handle }}-{{ value | handle }}"
                                >
                                  {{ value }}
                                  <input
                                    {% if option.selected_value == value %}
                                      checked
                                    {% endif %}
                                    type="radio"
                                    name="{{ option.name }}"
                                    value="{{ value }}"
                                    id="{{ option.name | handle }}-{{ value | handle }}"
                                    class="product-page__radio__input"
                                  >
                                </label>
                              {% endfor %}
                            </div>
                          {% endif %}
                        {% endif %}
                      </div>
                    {% endfor %}
                  </div>
                  <div class="product-page__hidden-variants" style="display: none;">
                    <select id="product-select" name="id">
                      {% for variant in product.variants %}
                        <option
                          value="{{ variant.id }}"
                          {% if variant == product.selected_or_first_available_variant %}
                            selected="selected"
                          {% endif %}
                        >
                          {{ variant.title }} - {{ variant.price | money }}
                        </option>
                      {% endfor %}
                    </select>
                  </div>
                {% endunless %}
              {% when 'quantity' %}
                <quantity-field class="quantity" {{ block.shopify_attributes }}>
                  <label for="quantity-text">
                    <p>{{ 'general.others.quantity' | t }}</p>
                  </label>
                  <div class="quantity-field" id="quantity-field">
                    <button type="button" class="quantity-field__minus" id="quantity-field__minus">-</button>
                    <input
                      type="quantity"
                      class="quantity-field__input"
                      id="quantity-field__input"
                      name="quantity"
                      min="1"
                      value="1"
                    >
                    <button type="button" class="quantity-field__plus" id="quantity-field__plus">+</button>
                  </div>
                </quantity-field>
              {% when 'stock_alert' %}
                {% assign stock_alert_threshold = block.settings.stock_alert_threshold %}
                {% if current_variant.inventory_quantity > 0
                  and current_variant.inventory_quantity < stock_alert_threshold
                %}
                  <div class="product-page__stock-disclaimer" {{ block.shopify_attributes }}>
                    <svg
                      class="product-page__stock-disclaimer__svg"
                      width="25"
                      height="24"
                      viewBox="0 0 25 24"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path d="M19.6384 17.5H5.36159L12.5 5.00778L19.6384 17.5Z" stroke="#FB4343"/>
                      <path d="M12.1297 13.6845L11.9497 8.89453H13.0797L12.8897 13.6845H12.1297ZM12.5197 15.9545C12.333 15.9545 12.1763 15.8912 12.0497 15.7645C11.923 15.6379 11.8597 15.4879 11.8597 15.3145C11.8597 15.1279 11.923 14.9745 12.0497 14.8545C12.1763 14.7345 12.333 14.6745 12.5197 14.6745C12.7063 14.6745 12.8597 14.7345 12.9797 14.8545C13.0997 14.9745 13.1597 15.1279 13.1597 15.3145C13.1597 15.4879 13.0997 15.6379 12.9797 15.7645C12.8597 15.8912 12.7063 15.9545 12.5197 15.9545Z" fill="#FB4343"/>
                    </svg>
                    <p class="product-page__stock-disclaimer__text">
                      {{ 'general.others.stock_disclaimer' | t: inventory: current_variant.inventory_quantity }}
                    </p>
                  </div>
                {% endif %}
              {% when 'countdown_timer' %}
                <div class="product-page__countdown-timer {{ section.id }}" {{ block.shopify_attributes }}>
                  {% style %}
                    .countdown-timer__timers {
                      display: flex;
                      justify-content: center;
                    }
                    .{{ block.id }}.countdown-timer > .countdown-timer__timers > .countdown-timer__container {
                      background-color: {{ block.settings.digits_background_color }};
                      border-radius: calc(var(--global-border-radius)/2);
                    }
                    .{{ block.id }}.countdown-timer > .countdown-timer__timers > .countdown-timer__container > p {
                      color: {{ block.settings.digits_color }};
                    }
                  {% endstyle %}
                  <div class="countdown-timer__text">
                    <p>{{ block.settings.text }}</p>
                  </div>
                  {% render 'snippet-countdown-timer', element: block %}
                </div>
              {% when 'buttons' %}
                <div class="product-page__buttons buttons buttons--center" {{ block.shopify_attributes }}>
                  <button
                    type="submit"
                    name="add"
                    value="{{ 'general.buttons.add_to_cart' | t }}"
                    class="button button--primary border add-to-cart-button"
                    id="add-to-cart-button"
                    data-variants-number="{{ product.variants.size }}"
                    data-actual-variant="{{ product.selected_or_first_available_variant.id }}"
                  >
                    <span></span> <span></span> <span></span> <span></span>
                    {{ 'general.buttons.add_to_cart' | t }}
                    {% render 'snippet-icons',
                      icon: 'loading-spinner',
                      spinner_color: 'var(--primary-button-text-color)',
                      spinner_background_color: 'var(--primary-button-background-color)'
                    %}
                  </button>
                  {% if block.settings.show_buy_now == true %}
                    <div class="dynamic-buy-button" id="dynamic-buy-button">
                      {{ form | payment_button }}
                    </div>
                  {% endif %}
                </div>
              {% when 'trust_bar' %}
                <div class="product-page__trust-bar" {{ block.shopify_attributes }}>
                  <a
                    {% if block.settings.trust_icon_1_link != blank %}
                      href="{{ block.settings.trust_icon_1_link }}"
                    {% endif %}
                    class="product-page__trust-badge"
                  >
                    <div class="product-page__trust-icon">
                      {% if block.settings.trust_icon_1_svg == blank %}
                        {% render 'snippet-icons', icon: block.settings.theme_icon_1 %}
                      {% else %}
                        {{ block.settings.trust_icon_1_svg }}
                      {% endif %}
                    </div>
                    <p class="product-page__trust-text {% if block.settings.trust_icon_1_link != blank %}underline{% endif %}">
                      {{ block.settings.trust_icon_1_text }}
                    </p>
                  </a>
                  <a
                    {% if block.settings.trust_icon_2_link != blank %}
                      href="{{ block.settings.trust_icon_2_link }}"
                    {% endif %}
                    class="product-page__trust-badge"
                  >
                    <div class="product-page__trust-icon">
                      {% if block.settings.trust_icon_2_svg == blank %}
                        {% render 'snippet-icons', icon: block.settings.theme_icon_2 %}
                      {% else %}
                        {{ block.settings.trust_icon_2_svg }}
                      {% endif %}
                    </div>
                    <p class="product-page__trust-text {% if block.settings.trust_icon_2_link != blank %}underline{% endif %}">
                      {{ block.settings.trust_icon_2_text }}
                    </p>
                  </a>
                  <a
                    {% if block.settings.trust_icon_2_link != blank %}
                      href="{{ block.settings.trust_icon_2_link }}"
                    {% endif %}
                    class="product-page__trust-badge"
                  >
                    <div class="product-page__trust-icon">
                      {% if block.settings.trust_icon_3_svg == blank %}
                        {% render 'snippet-icons', icon: block.settings.theme_icon_3 %}
                      {% else %}
                        {{ block.settings.trust_icon_3_svg }}
                      {% endif %}
                    </div>
                    <p class="product-page__trust-text {% if block.settings.trust_icon_3_link != blank %}underline{% endif %}">
                      {{ block.settings.trust_icon_3_text }}
                    </p>
                  </a>
                </div>
              {% when 'recommended_products' %}
                {% if product.metafields.custom.recommended_products %}
                  <div class="product-page__recommended-products-section" {{ block.shopify_attributes }}>
                    <h6 class="product-page__recommended-products-section-title">Buy it with</h6>
                    <div class="product-page__recommended-product-list">
                      {% for bundled_product in product.metafields.custom.recommended_products.value limit: 3 %}
                        <div class="product-page__recommended-product-container">
                          <div class="product-page__recommended-product corner-border">
                            <a href="{{ bundled_product.url }}" class="media corner-border-target">
                              {%- assign image = bundled_product.featured_image -%}
                              {%- capture sizes -%}(min-width: 1024px) calc(((var(--page-width) - 10rem ) / 2) / 3), calc((100vw - 4rem) / 3){%- endcapture -%}
                              {%- assign widths = '100, 125' -%}
                              {%- assign width = '125' -%}
                              {{
                                image
                                | image_url: width: width
                                | image_tag:
                                  loading: 'lazy',
                                  class: 'cover',
                                  alt: image.alt,
                                  width: image.width,
                                  height: image.height,
                                  sizes: sizes,
                                  widths: widths
                              }}
                            </a>
                            <div
                              class="quick-view-button desktop-only"
                              id="quick-view-button"
                              data-first-available-variant-id="{{ bundled_product.first_available_variant.id }}"
                              data-product-handle="{{ bundled_product.handle }}"
                              data-product-variants="{% if  bundled_product.variants.size > 1 %}with{% else %}without{% endif %}"
                            >
                              {% render 'snippet-icons', icon: 'quick-view' %}
                            </div>
                          </div>
                          <a href="{{ bundled_product.url }}" class="product-page__recommended-product-title">
                            {{ bundled_product.title }}
                          </a>
                          <quick-view-button>
                            <div
                              class="button--link mobile-only"
                              id="quick-view-button"
                              data-first-available-variant-id="{{ bundled_product.first_available_variant.id }}"
                              data-product-handle="{{ bundled_product.handle }}"
                              data-product-variants="{% if  bundled_product.variants.size > 1 %}with{% else %}without{% endif %}"
                            >
                              {%- if bundled_product.variants.size > 1 -%}
                                {{ 'general.buttons.quick_view' | t }} +
                              {% else %}
                                {{ 'general.buttons.add_to_cart' | t }} +
                              {%- endif -%}
                              {% render 'snippet-icons', icon: 'loading-spinner-tiny' %}
                            </div>
                          </quick-view-button>
                        </div>
                      {% endfor %}
                    </div>
                  </div>
                {% endif %}
            {% endcase %}
          {% endfor %}
        {% endform %}
      </div>
    </div>
  </div>
</product-page>

<script defer>
  updateRecentlyViewedProductsCookie("{{ product.id }}", "{{ product.title }}", "{{ product.url }}", "{{ product.available }}", "{{ product.featured_image | image_url }}", "{{ product.featured_image.alt }}", "{{ product.featured_image.width }}", "{{ product.featured_image.height }}", "{{ product.price | money }}", "{{ product.compare_at_price | money }}", "{{ product.compare_at_price | minus: product.price }}", "{{ product.compare_at_price | minus: product.price | money }}", "{{ 'now' | date: "%d" | minus: product.published_at | date: "%d" }}", "{{ product.first_available_variant.id }}", "{{ product.handle }}", "{{ product.variants.size }}");
  function updateRecentlyViewedProductsCookie(productId, productTitle, productUrl, productAvailability, productImage, productImageAlt, productImageWidth, productImageHeight, productPrice, productCompareAtPrice, productPriceDifference, productPriceDifferenceWithCurrency, productDateDifference, productVariantFirstId, productHandle, productVariantsSize) {
    let recentlyViewedProducts = [];

    let recentlyViewedProductsCookie =
      document.cookie.indexOf("recentlyViewedProducts=") !== -1
        ? JSON.parse(
            document.cookie
              .split("; ")
              .find((row) => row.startsWith("recentlyViewedProducts"))
              .split("=")
              .slice(1)
              .join("=")
          )
        : [];
    let expiry = new Date(400 * 24 * 60 * 60 * 1000 + Date.parse(new Date()));

    let productData = {
      id: productId,
      title: productTitle,
      url: productUrl,
      availability: productAvailability,
      image: productImage,
      image_alt: productImageAlt,
      image_width: productImageWidth,
      image_height: productImageHeight,
      price: productPrice,
      compare_at_price: productCompareAtPrice,
      price_difference: productPriceDifference,
      price_difference_with_currency: productPriceDifferenceWithCurrency,
      date_difference: productDateDifference,
      variant_first_id: productVariantFirstId,
      handle: productHandle,
      variants_size: productVariantsSize,
    };

    for (product = 0; product < recentlyViewedProductsCookie.length; product++) {
      if (recentlyViewedProductsCookie[product].id === productData.id) {
        recentlyViewedProductsCookie.splice(product, 1);
      }
    }

    recentlyViewedProductsCookie.push(productData);
    let newList = JSON.stringify(recentlyViewedProductsCookie);

    document.cookie = "recentlyViewedProducts" + "=" + newList + "; expires=" + expiry + "; path=/; domain=." + window.location.hostname;
  }
</script>

{% # theme-check-disable ParserBlockingScriptTag %}
{{ 'option_selection.js' | shopify_asset_url | script_tag }}
{% # theme-check-enable ParserBlockingScriptTag %}

<script defer>
  
  
  
  
  
  
  
  
  
  
  let variantsInventory = {};
  {% for variant in product.variants %}
  variantsInventory["{{ variant.title }}"] = {{ variant.inventory_quantity }};
  {% endfor %}

  let paymentMethods = `
      <div class="product-page__payment-methods">
          {%- liquid 
            for block in section.blocks 
                case block.type 
                    when "buttons" 
                        if block.settings.show_payment_methods == true 
                            if settings.payment_methods_type == 'chosen'
                                assign enabled_payment_types = settings.chosen_payment_methods | remove: ' ' | split: ','
                                for type in enabled_payment_types
                                    echo type | payment_type_svg_tag: class: 'icon'
                                endfor
                            elsif settings.payment_methods_type == 'enabled'
                                for type in shop.enabled_payment_types
                                    echo type | payment_type_svg_tag: class: 'icon'
                                endfor
                            endif
                        endif 
                  endcase
            endfor 
          -%}
      </div>
      `;

  let productJson = {{ product | json }};
  let currentVariantInventory = {{ current_variant.inventory_quantity }};
  let stockAlertThreshold = {{ stock_alert_threshold }};
  let priceDifferenceText= "{{ price_difference_text }}";










</script>

{% schema %}
{
  "name": "Product page",
  "class": "page-product",
  "settings": [
    {
      "type": "checkbox",
      "id": "thumbnails_on_mobile",
      "label": "Show product thumbnails on mobile instead of indicators",
      "default": false
    },
    {
      "type": "range",
      "id": "top_space",
      "label": "Top space",
      "min": 0,
      "max": 400,
      "step": 10,
      "unit": "px",
      "default": 180
    },
    {
      "type": "range",
      "id": "bottom_space",
      "label": "Top bottom",
      "min": 0,
      "max": 400,
      "step": 10,
      "unit": "px",
      "default": 0
    }
  ],
  "blocks": [
    {
      "type": "@app"
    },
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "name",
      "name": "Product name",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "sale_tag",
      "name": "Sale tag",
      "limit": 1
    },
    {
      "type": "variants_selector",
      "name": "Variants selector",
      "limit": 1,
      "settings": [
        {
          "type": "select",
          "id": "variant_selector_type",
          "label": "Variant selector type",
          "options": [
            {
              "value": "block",
              "label": "Block"
            },
            {
              "value": "dropdown",
              "label": "Dropdown"
            }
          ],
          "default": "block"
        },
        {
          "type": "select",
          "id": "color_selector_type",
          "label": "Color selector type",
          "options": [
            {
              "value": "block",
              "label": "Block"
            },
            {
              "value": "dropdown",
              "label": "Dropdown"
            },
            {
              "value": "color_swatch",
              "label": "Color swatch"
            },
            {
              "value": "variant_image",
              "label": "Variant image"
            }
          ],
          "info": "For the color swatch to work properly, the product must have variants, every variant must have an image attached to it, every image alt must be written in the format #color:Name, and the color and it's hex must be added in Color swatch tab in theme settings.",
          "default": "block"
        }
      ]
    },
    {
      "type": "stock_alert",
      "name": "Stock alert",
      "limit": 1,
      "settings": [
        {
          "type": "range",
          "id": "stock_alert_threshold",
          "min": 1,
          "max": 100,
          "step": 1,
          "unit": "pcs",
          "label": "Stock alert threshold",
          "default": 15
        }
      ]
    },
    {
      "type": "countdown_timer",
      "name": "Countdown timer",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Hurry up! Offer ends in:"
        },
        {
          "type": "header",
          "content": "Countdown timer"
        },
        {
          "type": "text",
          "id": "message",
          "label": "Expiration message",
          "default": "Offer has expired",
          "info": "It is optional for Option 1 but required for Option 2"
        },
        {
          "type": "select",
          "id": "countdown_timer_type",
          "label": "Type",
          "options": [
            {
              "value": "time",
              "label": "Option 1: Based on user cookies"
            },
            {
              "value": "date",
              "label": "Option 2: Based on a date"
            }
          ],
          "default": "time"
        },
        {
          "type": "select",
          "id": "digits_size",
          "label": "Digits size",
          "options": [
            {
              "value": "small",
              "label": "Small"
            },
            {
              "value": "big",
              "label": "Big"
            }
          ],
          "default": "small"
        },
        {
          "type": "color",
          "id": "digits_color",
          "label": "Digits color",
          "default": "#000000"
        },
        {
          "type": "color",
          "id": "digits_background_color",
          "label": "Digits background color",
          "default": "#fcdb33"
        },
        {
          "type": "header",
          "content": "Option 1: Based on user cookies",
          "info": "⚠️ Remember that this option also saves your browser cookies. So if your new settings aren't taking effect immediately, simply clear the cookies and refresh the page."
        },
        {
          "type": "range",
          "id": "time_days",
          "min": 0,
          "max": 100,
          "step": 1,
          "unit": "d",
          "label": "Days",
          "default": 0
        },
        {
          "type": "range",
          "id": "time_hours",
          "min": 0,
          "max": 24,
          "step": 1,
          "unit": "h",
          "label": "Hours",
          "default": 6
        },
        {
          "type": "range",
          "id": "time_mins",
          "min": 0,
          "max": 60,
          "step": 1,
          "unit": "m",
          "label": "Minutes",
          "default": 0
        },
        {
          "type": "range",
          "id": "time_secs",
          "min": 0,
          "max": 60,
          "step": 1,
          "unit": "s",
          "label": "Seconds",
          "default": 0
        },
        {
          "type": "select",
          "id": "afterExpirationTimeOnly",
          "label": "After countdown expires",
          "options": [
            {
              "value": "repeatCountdown",
              "label": "Repeat countdown"
            },
            {
              "value": "showMessage",
              "label": "Show message"
            }
          ],
          "default": "repeatCountdown",
          "info": "This applied only to Option 1."
        },
        {
          "type": "header",
          "content": "Option 2: Based on a date"
        },
        {
          "type": "range",
          "id": "date_year",
          "min": 2022,
          "max": 2032,
          "step": 1,
          "unit": "y",
          "label": "Year",
          "default": 2023
        },
        {
          "type": "range",
          "id": "date_month",
          "min": 1,
          "max": 12,
          "step": 1,
          "unit": "m",
          "label": "Month",
          "default": 1
        },
        {
          "type": "range",
          "id": "date_day",
          "min": 1,
          "max": 31,
          "step": 1,
          "unit": "d",
          "label": "Day",
          "default": 1,
          "info": "⚠️ Pay attention: If you put 31 to a month that ends with 30 or 28 days, it will result in an error in calculation."
        },
        {
          "type": "range",
          "id": "date_hour",
          "min": 0,
          "max": 24,
          "step": 1,
          "unit": "h",
          "label": "Hour",
          "default": 0
        },
        {
          "type": "range",
          "id": "date_min",
          "min": 0,
          "max": 60,
          "step": 1,
          "unit": "m",
          "label": "Minute",
          "default": 0
        }
      ]
    },
    {
      "type": "buttons",
      "name": "Buttons",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_buy_now",
          "label": "Show buy now button",
          "default": true
        },
        {
          "type": "checkbox",
          "id": "show_payment_methods",
          "label": "Show payment methods icons with buy now button",
          "default": true
        }
      ]
    },
    {
      "type": "trust_bar",
      "name": "Trust bar",
      "limit": 1,
      "settings": [
        {
          "type": "header",
          "content": "Icon 1"
        },
        {
          "type": "text",
          "id": "trust_icon_1_text",
          "label": "Text",
          "default": "Free shipping"
        },
        {
          "type": "url",
          "id": "trust_icon_1_link",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "theme_icon_1",
          "label": "Icon",
          "default": "box",
          "info": "Applicable only if 'Custom icon - svg' is empty",
          "options": [
            {
              "group": "Shop",
              "value": "home",
              "label": "Home"
            },
            {
              "group": "Shop",
              "value": "account",
              "label": "Account"
            },
            {
              "group": "Shop",
              "value": "search",
              "label": "Search"
            },
            {
              "group": "Shop",
              "value": "cart",
              "label": "Cart"
            },
            {
              "group": "Communication",
              "value": "phone",
              "label": "Phone"
            },
            {
              "group": "Communication",
              "value": "email",
              "label": "Email"
            },
            {
              "group": "Communication",
              "value": "contact",
              "label": "Contact"
            },
            {
              "group": "Communication",
              "value": "support",
              "label": "Support"
            },
            {
              "group": "Shipping",
              "value": "box",
              "label": "Box"
            },
            {
              "group": "Shipping",
              "value": "location",
              "label": "Location"
            },
            {
              "group": "Shipping",
              "value": "map",
              "label": "Map"
            },
            {
              "group": "Trust",
              "value": "badge",
              "label": "Badge"
            },
            {
              "group": "Trust",
              "value": "shield",
              "label": "Shield"
            },
            {
              "group": "Trust",
              "value": "review",
              "label": "Review"
            },
            {
              "group": "Others",
              "value": "star",
              "label": "Star"
            },
            {
              "group": "Others",
              "value": "play",
              "label": "Play"
            },
            {
              "group": "Others",
              "value": "checkmark",
              "label": "Checkmark"
            },
            {
              "group": "Others",
              "value": "prohibition",
              "label": "Prohibition"
            },
            {
              "group": "Others",
              "value": "warning",
              "label": "Warning"
            },
            {
              "group": "Social",
              "value": "share",
              "label": "Share"
            },
            {
              "group": "Social",
              "value": "facebook",
              "label": "Facebook"
            },
            {
              "group": "Social",
              "value": "instagram",
              "label": "Instagram"
            },
            {
              "group": "Social",
              "value": "twitter",
              "label": "Twitter"
            },
            {
              "group": "Social",
              "value": "pinterest",
              "label": "Pinterest"
            },
            {
              "group": "Social",
              "value": "tiktok",
              "label": "Tiktok"
            },
            {
              "group": "Social",
              "value": "snapchat",
              "label": "Snapchat"
            },
            {
              "group": "Social",
              "value": "youtube",
              "label": "Youtube"
            },
            {
              "group": "Social",
              "value": "vimeo",
              "label": "Vimeo"
            }
          ]
        },
        {
          "type": "liquid",
          "id": "trust_icon_1_svg",
          "label": "Custom icon - svg"
        },
        {
          "type": "header",
          "content": "Icon 2"
        },
        {
          "type": "text",
          "id": "trust_icon_2_text",
          "label": "Text",
          "default": "30-day money back guarantee"
        },
        {
          "type": "url",
          "id": "trust_icon_2_link",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "theme_icon_2",
          "label": "Icon",
          "default": "badge",
          "info": "Applicable only if 'Custom icon - svg' is empty",
          "options": [
            {
              "group": "Shop",
              "value": "home",
              "label": "Home"
            },
            {
              "group": "Shop",
              "value": "account",
              "label": "Account"
            },
            {
              "group": "Shop",
              "value": "search",
              "label": "Search"
            },
            {
              "group": "Shop",
              "value": "cart",
              "label": "Cart"
            },
            {
              "group": "Communication",
              "value": "phone",
              "label": "Phone"
            },
            {
              "group": "Communication",
              "value": "email",
              "label": "Email"
            },
            {
              "group": "Communication",
              "value": "contact",
              "label": "Contact"
            },
            {
              "group": "Communication",
              "value": "support",
              "label": "Support"
            },
            {
              "group": "Shipping",
              "value": "box",
              "label": "Box"
            },
            {
              "group": "Shipping",
              "value": "location",
              "label": "Location"
            },
            {
              "group": "Shipping",
              "value": "map",
              "label": "Map"
            },
            {
              "group": "Trust",
              "value": "badge",
              "label": "Badge"
            },
            {
              "group": "Trust",
              "value": "shield",
              "label": "Shield"
            },
            {
              "group": "Trust",
              "value": "review",
              "label": "Review"
            },
            {
              "group": "Others",
              "value": "star",
              "label": "Star"
            },
            {
              "group": "Others",
              "value": "play",
              "label": "Play"
            },
            {
              "group": "Others",
              "value": "checkmark",
              "label": "Checkmark"
            },
            {
              "group": "Others",
              "value": "prohibition",
              "label": "Prohibition"
            },
            {
              "group": "Others",
              "value": "warning",
              "label": "Warning"
            },
            {
              "group": "Social",
              "value": "share",
              "label": "Share"
            },
            {
              "group": "Social",
              "value": "facebook",
              "label": "Facebook"
            },
            {
              "group": "Social",
              "value": "instagram",
              "label": "Instagram"
            },
            {
              "group": "Social",
              "value": "twitter",
              "label": "Twitter"
            },
            {
              "group": "Social",
              "value": "pinterest",
              "label": "Pinterest"
            },
            {
              "group": "Social",
              "value": "tiktok",
              "label": "Tiktok"
            },
            {
              "group": "Social",
              "value": "snapchat",
              "label": "Snapchat"
            },
            {
              "group": "Social",
              "value": "youtube",
              "label": "Youtube"
            },
            {
              "group": "Social",
              "value": "vimeo",
              "label": "Vimeo"
            }
          ]
        },
        {
          "type": "liquid",
          "id": "trust_icon_2_svg",
          "label": "Custom icon - svg"
        },
        {
          "type": "header",
          "content": "Icon 3"
        },
        {
          "type": "text",
          "id": "trust_icon_3_text",
          "label": "Text",
          "default": "24/7 customer support"
        },
        {
          "type": "url",
          "id": "trust_icon_3_link",
          "label": "Link"
        },
        {
          "type": "select",
          "id": "theme_icon_3",
          "label": "Icon",
          "default": "contact",
          "info": "Applicable only if 'Custom icon - svg' is empty",
          "options": [
            {
              "group": "Shop",
              "value": "home",
              "label": "Home"
            },
            {
              "group": "Shop",
              "value": "account",
              "label": "Account"
            },
            {
              "group": "Shop",
              "value": "search",
              "label": "Search"
            },
            {
              "group": "Shop",
              "value": "cart",
              "label": "Cart"
            },
            {
              "group": "Communication",
              "value": "phone",
              "label": "Phone"
            },
            {
              "group": "Communication",
              "value": "email",
              "label": "Email"
            },
            {
              "group": "Communication",
              "value": "contact",
              "label": "Contact"
            },
            {
              "group": "Communication",
              "value": "support",
              "label": "Support"
            },
            {
              "group": "Shipping",
              "value": "box",
              "label": "Box"
            },
            {
              "group": "Shipping",
              "value": "location",
              "label": "Location"
            },
            {
              "group": "Shipping",
              "value": "map",
              "label": "Map"
            },
            {
              "group": "Trust",
              "value": "badge",
              "label": "Badge"
            },
            {
              "group": "Trust",
              "value": "shield",
              "label": "Shield"
            },
            {
              "group": "Trust",
              "value": "review",
              "label": "Review"
            },
            {
              "group": "Others",
              "value": "star",
              "label": "Star"
            },
            {
              "group": "Others",
              "value": "play",
              "label": "Play"
            },
            {
              "group": "Others",
              "value": "checkmark",
              "label": "Checkmark"
            },
            {
              "group": "Others",
              "value": "prohibition",
              "label": "Prohibition"
            },
            {
              "group": "Others",
              "value": "warning",
              "label": "Warning"
            },
            {
              "group": "Social",
              "value": "share",
              "label": "Share"
            },
            {
              "group": "Social",
              "value": "facebook",
              "label": "Facebook"
            },
            {
              "group": "Social",
              "value": "instagram",
              "label": "Instagram"
            },
            {
              "group": "Social",
              "value": "twitter",
              "label": "Twitter"
            },
            {
              "group": "Social",
              "value": "pinterest",
              "label": "Pinterest"
            },
            {
              "group": "Social",
              "value": "tiktok",
              "label": "Tiktok"
            },
            {
              "group": "Social",
              "value": "snapchat",
              "label": "Snapchat"
            },
            {
              "group": "Social",
              "value": "youtube",
              "label": "Youtube"
            },
            {
              "group": "Social",
              "value": "vimeo",
              "label": "Vimeo"
            }
          ]
        },
        {
          "type": "liquid",
          "id": "trust_icon_3_svg",
          "label": "Custom icon - svg"
        }
      ]
    },
    {
      "type": "recommended_products",
      "name": "Recommended products",
      "limit": 1,
      "settings": [
        {
          "type": "header",
          "content": "Recommended products requirement",
          "info": "Make sure you have created a custom [metafield](https://help.shopify.com/en/manual/metafields) in [admin settings](/admin/metafields) named \"custom.recommended_products\" and went to the product page and selected the products you want to recommend in the metafields section. Otherwise the recommended products section will not show."
        }
      ]
    }
  ]
}
{% endschema %}

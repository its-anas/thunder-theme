{{ 'featured-collections.css' | asset_url | stylesheet_tag }}

{% liquid
  assign mobile_items = section.settings.mobile_items
  assign tablet_items = section.settings.tablet_items
  assign desktop_items = section.settings.desktop_items
  assign desktop_section_width = section.settings.row_width
%}

{%- style -%}
  .{{ section.id }}.featured-collections > .slider-component > .slides-container {
    --mobile-items: {{ mobile_items }};
    --tablet-items: {{ tablet_items }};
    --desktop-items: {{ desktop_items }};
  }
  @media screen and (min-width: 1025px) {
    .{{ section.id }}.featured-collections > .slider-component > .slides-container {
      --container-width: calc(var(--section-width) * {{ desktop_section_width | divided_by: 100.00 }} );
    }
    .{{ section.id }}.featured-collections > .slider-component > .prev,
    .{{ section.id }}.featured-collections > .slider-component > .next {
      width: {{ 100 | minus: desktop_section_width | divided_by: 2 }}%;
    }
  }

  .{{ section.id }}.featured-collections > .slider-component > .slides-container > .slide > .item {
    aspect-ratio: {{ section.settings.aspect_ratio }};
  }

  .{{ section.id }}.featured-collections {
    gap: {{ section.settings.space_between_elements }}rem;
    padding: {{ section.settings.space_outside_elements | divided_by: 2 }}px 0;
  }

  .{{ section.id }}.just-color {
    background-color: {{ section.settings.background_color }};
   }

  .{{ section.id }}.image {
    background-image: url({{ section.settings.background_image | image_url: width: settings.wrapped_content_width }});
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
   }
{%- endstyle -%}

<slider-section
  data-mobile-items="{{ mobile_items }}"
  data-tablet-items="{{ tablet_items }}"
  data-desktop-items="{{ desktop_items }}"
  class="{{ section.id }} featured-collections just-color {% if section.settings.background_image == blank %}just-color{% else %}{{ section.settings.background_type }}{% endif %} {{ section.settings.section_width }}"
>
  <div class="featured-collections__heading">
    <h6>{{ section.settings.heading }}</h6>
  </div>
  <div class="slider-component">
    <div class="prev">
      {% render 'icons', icon: 'chevron-prev' -%}
    </div>
    <div class="slides-container">
      <div class="slide">
        {% for block in section.blocks %}
          <div class="item" {{ block.shopify_attributes }}>
            <div class="featured-collections__image">
              {% if block.settings.collection != blank %}
                <div class="media">
                  {% if block.settings.replace_image == false %}
                    {% assign image = block.settings.collection.image %}
                  {% elsif block.settings.replace_image == true %}
                    {% assign image = block.settings.image %}
                  {% endif %}
                  {% if image != blank %}
                    <img
                      srcset="{{ image | image_url }}"
                      loading="lazy"
                      alt="{{ image.alt | escape }}"
                      width="{{ image.width }}"
                      height="{{ image.height }}"
                      class="fit"
                    >
                  {% else %}
                    {{ 'collection-1' | placeholder_svg_tag: 'placeholder' }}
                  {% endif %}
                </div>
              {% else %}
                {{ 'collection-1' | placeholder_svg_tag: 'placeholder' }}
              {% endif %}
            </div>
            <a
              {% if block.settings.collection != blank %}
                href="{{ block.settings.collection.url }}"
              {% endif %}
              class="featured-collections__container"
            >
              <div class="featured-collections__title">
                <div class="text button">
                  {% if block.settings.collection.title != blank %}
                    {{ block.settings.collection.title }}
                  {% elsif block.settings.collection.title == blank %}
                    COLLECTION
                  {% endif %}
                </div>
              </div>
            </a>
          </div>
        {% endfor %}
      </div>
    </div>
    <div class="next">
      {% render 'icons', icon: 'chevron-next' -%}
    </div>
  </div>
  <div class="featured-collections__link">
    <a class="button--link small" href="/collections/">View all</a>
  </div>
</slider-section>

{% schema %}
{
  "name": "Featured collections",
  "settings": [
    {
      "type": "header",
      "content": "Collection settings"
    },
    {
      "type": "range",
      "id": "aspect_ratio",
      "min": 0.5,
      "max": 2,
      "step": 0.1,
      "unit": "a/r",
      "label": "Aspect ratio",
      "default": 0.6 
    },
    {
      "type": "range",
      "id": "mobile_items",
      "min": 1,
      "max": 3,
      "step": 1,
      "unit": "n",
      "label": "Items per row in mobile",
      "default": 2
    },
    {
      "type": "range",
      "id": "tablet_items",
      "min": 3,
      "max": 6,
      "step": 1,
      "unit": "n",
      "label": "Items per row in tablet",
      "default": 3
    },
    {
      "type": "range",
      "id": "desktop_items",
      "min": 3,
      "max": 6,
      "step": 1,
      "unit": "n",
      "label": "Items per row in desktop",
      "default": 4
    },
    {
      "type": "header",
      "content": "Section settings"
    },

    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Featured collections"
    },
    {
      "type": "select",
      "id": "background_type",
      "label": "Type",
      "options": [
        {
          "value": "image",
          "label": "Image"
        },
        {
          "value": "just-color",
          "label": "Color"
        }
      ],
      "default": "just-color"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background color",
      "default": "#000000",
      "info": "Applied only if Type is 'Color'"
    },
    {
      "type": "image_picker",
      "id": "background_image",
      "label": "Image",
      "info": "Applied only if Type is 'Image'"
    },
    {
      "type": "range",
      "id": "collection_height",
      "min": 200,
      "max": 400,
      "step": 50,
      "unit": "px",
      "label": "Collection height",
      "default": 350,
      "info": "This is for desktop only. In the other screens the height will be calculated automatically based on this number."
    },
    {
      "type": "range",
      "id": "space_between_elements",
      "label": "Space between elements",
      "min": 1,
      "max": 3,
      "step": 1,
      "unit": "rem",
      "default": 1
    },
    {
      "type": "range",
      "id": "space_outside_elements",
      "label": "Space outside elements",
      "min": 30,
      "max": 100,
      "step": 1,
      "unit": "px",
      "default": 50
    },
    {
      "type": "range",
      "id": "row_width",
      "min": 40,
      "max": 90,
      "step": 5,
      "unit": "%",
      "label": "Row width relative to screen",
      "default": 50
    },
    {
      "type": "select",
      "id": "section_width",
      "label": "Section width",
      "default": "full",
      "options": [
        {
          "value": " ",
          "label": "Full width"
        },
        {
          "value": "wrapped",
          "label": "Wrapped"
        }
      ],
      "default": " "
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "label": "Collection",
          "id": "collection",
          "type": "collection"
        },
        {
          "type": "checkbox",
          "id": "replace_image",
          "label": "Use different image",
          "default": false,
          "info": "If activated it will replace the collection image with the one you choose below"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image",
          "info": "Applied only if checkbox is checked"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Featured collections",
      "blocks": [
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" }
      ]
    }
  ]
}
{% endschema %}
